fastcgi_cache_path /var/cache/nginx/esc keys_zone=my_cache:10m levels=1:2 inactive=30m use_temp_path=off;
fastcgi_cache_key "$scheme$request_method$host$request_uri";

server {
  listen 80;
  listen [::]:80;

  server_name ~^(?<vhost>[^.]*)\.(?<devenv>[^.]*)\.playesc\.com$;
  #set $escApp = $vhost;
  set $rootdir "/home/escweb/apps/$vhost/webroot/";
  root $rootdir;

  index index.php;

  set $cors_headers "X-fancyBox,X-Requested-With";
  set $cors "";

  client_max_body_size 500M;

  location ~ \.(hh|php)$ {
      fastcgi_keep_conn on;
      fastcgi_pass   hhvm:9010;
      fastcgi_index  index.php;
      fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param  QUERY_STRING       $query_string;
      fastcgi_param  REQUEST_METHOD     $request_method;
      fastcgi_param  CONTENT_TYPE       $content_type;
      fastcgi_param  CONTENT_LENGTH     $content_length;

      fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
      fastcgi_param  REQUEST_URI        $request_uri;
      fastcgi_param  DOCUMENT_URI       $document_uri;
      fastcgi_param  DOCUMENT_ROOT      $document_root;
      fastcgi_param  SERVER_PROTOCOL    $server_protocol;
      fastcgi_param  REQUEST_SCHEME     $scheme;
      fastcgi_param  HTTPS              $https if_not_empty;

      fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
      fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;

      fastcgi_param  REMOTE_ADDR        $remote_addr;
      fastcgi_param  REMOTE_PORT        $remote_port;
      fastcgi_param  SERVER_ADDR        $server_addr;
      fastcgi_param  SERVER_PORT        $server_port;
      fastcgi_param  SERVER_NAME        $server_name;

      # PHP only, required if PHP was built with --enable-force-cgi-redirect
      fastcgi_param  REDIRECT_STATUS    200;


      set $skip_cache 1;
      if ($request_uri ~* "\.(jpe?g|png|js|css|map|gif)") {
          set $skip_cache 0;
      }
      if ($request_uri ~ "^\/cga\/") {
          set $skip_cache 0;
      }
      if ($request_uri ~ "^\/processed\/") {
          set $skip_cache 0;
      }

      fastcgi_cache my_cache;
      fastcgi_cache_valid 200 301 302 5m;
      fastcgi_cache_bypass $skip_cache;
      fastcgi_no_cache $skip_cache;
      add_header X-FastCGI-Cache $upstream_cache_status;
      add_header X-SkipCache $skip_cache;

    # cors configuration
    # whitelist of allowed domains, via a regular expression
    if ($http_origin ~* (\.playesc\.com)) { # yeah, for local development. tailor your regex as needed
        set $cors "true";
    }

    if ($http_origin ~* (\.esc\.games)) { # yeah, for local development. tailor your regex as needed
        set $cors "true";
    }


    # apparently, the following three if statements create a flag for "compound conditions"
    if ($request_method = OPTIONS) {
       set $cors "${cors}options";
    }

    if ($request_method = GET) {
       set $cors "${cors}get";
    }

    if ($request_method = POST) {
       set $cors "${cors}post";
    }

    # now process the flag
    if ($cors = 'trueget') {
       add_header 'Access-Control-Allow-Origin' "$http_origin";
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Expose-Headers' 'X-Requested-With' always;
    }

    if ($cors = 'truepost') {
       add_header 'Access-Control-Allow-Origin' "$http_origin";
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Expose-Headers' 'X-Requested-With' always;
    }

    if ($cors = 'trueoptions') {
       add_header 'Access-Control-Allow-Origin' "$http_origin";
       add_header 'Access-Control-Allow-Credentials' 'true';

       add_header 'Access-Control-Max-Age' 1728000; # cache preflight value for 20 days
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,$cors_headers';

       add_header 'Content-Length' 0;
       add_header 'Content-Type' 'text/plain charset=UTF-8';
       return 204;
    }

  }

  location / {
    rewrite ^(.*)$ /index.php?u=$1 last;
  }

  location /static/ {

  }
}